{
    "env": {
        "browser": true,
        "es2021": true,
        "node":true
    },
    "extends": [
        "eslint:recommended",
        "plugin:@typescript-eslint/recommended"
    ],
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
        "ecmaVersion": "latest",
        "sourceType": "module"
    },
    "plugins": [
        "@typescript-eslint"
    ],
    "rules": {
        "@typescript-eslint/naming-convention": [
            "error",
            {
              "selector": "variable",
              "format": ["camelCase", "PascalCase","UPPER_CASE"],
              "leadingUnderscore": "allow"
            },
            {
              "selector": "function",
              "format": ["camelCase"],
              "leadingUnderscore": "allow"
            },
            {
              "selector": "enumMember",
              "format": ["UPPER_CASE"]
            },
            {
              "selector": "typeLike",
              "format": ["PascalCase"]
            },
            {
              "selector": "property",
              "modifiers": ["static"],
              "format": ["UPPER_CASE"]
            },
            {
              "selector": "parameterProperty",
              "format": ["camelCase"],
              "leadingUnderscore": "allow"
            },
            {
              "selector": "typeParameter",
              "format": ["PascalCase"]
            },
            {
              "selector": "enum",
              "format": ["PascalCase"]
            },
            {
              "selector": "interface",
              "format": ["PascalCase"]
            }
          ],
        "no-console": 0,
        "no-debugger": 1,
        "no-extra-boolean-cast": 0,
        "no-useless-constructor": 0,
        "no-var": 1,
        "@typescript-eslint/no-explicit-any": "off",
        "indent": [
            "error",
            2
        ],
        "linebreak-style": [
            "error",
            "windows"
        ],
        "quotes": [
            "error",
            "single"
        ],
        "semi": [
            "error",
            "never"
        ],
        "space-before-blocks": [
            "error",
            "always"
          ],
        "@typescript-eslint/no-unused-vars": "error"
    }
}
